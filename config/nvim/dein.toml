[[plugins]]
repo = 'cespare/vim-toml'

[[plugins]]
repo = 'cocopon/iceberg.vim'
hook_add = '''
  colorscheme iceberg
'''

[[plugins]]
repo = 'cohama/lexima.vim'

[[plugins]]
repo = 'editorconfig/editorconfig-vim'

[[plugins]]
repo = 'elixir-lang/vim-elixir'

[[plugins]]
repo = 'elzr/vim-json'

[[plugins]]
repo = 'fatih/vim-go'
on_ft = 'go'
hook_add = '''
  let g:go_def_mode = 'gopls'
  let g:go_fmt_autosave = 1
  let g:go_fmt_command = "goimports"
  let g:go_metalinter_autosave_enabled = ['vet']
'''

[[plugins]]
repo = 'hail2u/vim-css3-syntax'

[[plugins]]
repo = 'hashivim/vim-terraform'
hook_add = '''
  let g:terraform_fmt_on_save = 1
'''

[[plugins]]
repo = 'honza/vim-snippets'

[[plugins]]
repo = 'itchyny/lightline.vim'
hook_add = '''
  let g:lightline = { 'colorscheme': 'wombat' }
'''

[[plugins]]
repo = 'janko/vim-test'
depends = ['vim-dispatch']
hook_add = '''
  let g:test#strategy = 'dispatch'
	nmap <Leader>tn :TestNearest<CR>
	nmap <Leader>tf :TestFile<CR>
	nmap <Leader>ts :TestSuite<CR>
	nmap <Leader>tl :TestLast<CR>
	nmap <Leader>tg :TestVisit<CR><Paste>
'''

[[plugins]]
repo = '/usr/local/opt/fzf'

[[plugins]]
repo = 'junegunn/fzf.vim'
hook_add = '''
  nnoremap <Leader>fb :Buffers<CR>
  nnoremap <Leader>fd :Files $HOME/ghq/github.com/ojiry/dotfiles<CR>
  nnoremap <Leader>ff :Files<CR>
  nnoremap <Leader>ft :Filetypes<CR>
'''

[[plugins]]
repo = 'kballard/vim-fish'

[[plugins]]
repo = 'leafgarland/typescript-vim'

[[plugins]]
repo = 'mhinz/vim-mix-format'
hook_add = '''
  let g:mix_format_on_save = 1
'''

[[plugins]]
repo = 'mxw/vim-jsx'

[[plugins]]
repo = 'natebosch/vim-lsc'

[[plugins]]
repo = 'pangloss/vim-javascript'

[[plugins]]
repo = 'prabirshrestha/async.vim'

[[plugins]]
repo = 'prabirshrestha/asyncomplete.vim'

[[plugins]]
repo = 'prabirshrestha/asyncomplete-lsp.vim'

[[plugins]]
repo = 'prabirshrestha/asyncomplete-ultisnips.vim'
depends = ['asyncomplete.vim', 'ultisnips']
hook_add = '''
  let g:UltiSnipsExpandTrigger="<tab>"
  let g:UltiSnipsJumpForwardTrigger="<tab>"
  let g:UltiSnipsJumpBackwardTrigger="<s-tab>"

  if has('python3')
    call asyncomplete#register_source(asyncomplete#sources#ultisnips#get_source_options({
      \ 'name': 'ultisnips',
      \ 'whitelist': ['*'],
      \ 'completor': function('asyncomplete#sources#ultisnips#completor'),
      \ }))
  endif
'''

[[plugins]]
repo = 'prabirshrestha/vim-lsp'
hook_add = '''
  let g:lsp_async_completion = 1

  if executable('gopls')
    au User lsp_setup call lsp#register_server({
      \ 'name': 'gopls',
      \ 'cmd': {server_info->['gopls', '-mode', 'stdio']},
      \ 'whitelist': ['go'],
      \ })
    autocmd BufWritePre *.go LspDocumentFormatSync
  endif

  if executable('solargraph')
    " gem install solargraph
    au User lsp_setup call lsp#register_server({
      \ 'name': 'solargraph',
      \ 'cmd': {server_info->[&shell, &shellcmdflag, 'solargraph stdio']},
      \ 'initialization_options': {"diagnostics": "true"},
      \ 'whitelist': ['ruby'],
      \ })
  endif

  if executable('rls')
    au User lsp_setup call lsp#register_server({
      \ 'name': 'rls',
      \ 'cmd': {server_info->['rustup', 'run', 'stable', 'rls']},
      \ 'workspace_config': {'rust': {'clippy_preference': 'on'}},
      \ 'whitelist': ['rust'],
      \ })
  endif
'''

[[plugins]]
repo = 'rcmdnk/vim-markdown'
hook_add = '''
  let g:vim_markdown_folding_disabled = 1
'''

[[plugins]]
repo = 'rust-lang/rust.vim'

[[plugins]]
repo = 'Shougo/dein.vim'

[[plugins]]
repo = 'Shougo/vimproc.vim'
build = 'make'

[[plugins]]
repo = 'SirVer/ultisnips'

[[plugins]]
repo = 'thinca/vim-quickrun'

[[plugins]]
repo = 'tmux-plugins/vim-tmux'

[[plugins]]
repo = 'tpope/vim-dispatch'

[[plugins]]
repo = 'tpope/vim-endwise'

[[plugins]]
repo = 'tpope/vim-fugitive'

[[plugins]]
repo = 'tpope/vim-rails'

[[plugins]]
repo = 'tpope/vim-repeat'

[[plugins]]
repo = 'tpope/vim-rhubarb'
hook_add = '''
  nmap <silent> gb :Gbrowse<CR>
  vmap <silent> gb :Gbrowse<CR>
'''

[[plugins]]
repo = 'tpope/vim-surround'
