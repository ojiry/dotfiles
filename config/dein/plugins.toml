[[plugins]]
repo = 'cespare/vim-toml'

[[plugins]]
repo = 'cocopon/iceberg.vim'
hook_add = '''
  colorscheme iceberg
'''

[[plugins]]
repo = 'cohama/lexima.vim'

[[plugins]]
repo = 'editorconfig/editorconfig-vim'

[[plugins]]
repo = 'elixir-lang/vim-elixir'

[[plugins]]
repo = 'elzr/vim-json'

[[plugins]]
repo = 'fatih/vim-go'
on_ft = 'go'
hook_add = '''
  let g:go_def_mapping_enabled = 0
  let g:go_doc_keywordprg_enabled = 0
  let g:go_fmt_autosave = 1
  let g:go_fmt_command = "goimports"
'''

[[plugins]]
repo = 'hail2u/vim-css3-syntax'

[[plugins]]
repo = 'hashivim/vim-terraform'
hook_add = '''
  let g:terraform_fmt_on_save = 1
'''

[[plugins]]
repo = 'itchyny/lightline.vim'
hook_add = '''
  let g:lightline = { 'colorscheme': 'wombat' }
'''

[[plugins]]
repo = 'jodosha/vim-godebug'
hook_add = '''
  nnoremap [godebug] <Nop>
  nmap <Space>g [godebug]
  nmap <silent> [godebug]d :GoDebug<CR>
  nmap <silent> [godebug]t :GoToggleBreakpoint<CR>
'''

[[plugins]]
repo = 'kballard/vim-fish'

[[plugins]]
repo = 'leafgarland/typescript-vim'

[[plugins]]
repo = 'mhinz/vim-mix-format'
hook_add = '''
  let g:mix_format_on_save = 1
'''

[[plugins]]
repo = 'mxw/vim-jsx'

[[plugins]]
repo = 'natebosch/vim-lsc'

[[plugins]]
repo = 'pangloss/vim-javascript'

[[plugins]]
repo = 'prabirshrestha/async.vim'

[[plugins]]
repo = 'prabirshrestha/asyncomplete.vim'

[[plugins]]
repo = 'prabirshrestha/asyncomplete-lsp.vim'

[[plugins]]
repo = 'prabirshrestha/asyncomplete-neosnippet.vim'

[[plugins]]
repo = 'prabirshrestha/vim-lsp'
hook_add = '''
  let g:lsp_async_completion = 1
  if executable('gopls')
    au User lsp_setup call lsp#register_server({
      \ 'name': 'gopls',
      \ 'cmd': {server_info->['gopls', '-mode', 'stdio']},
      \ 'whitelist': ['go'],
      \ })
    autocmd BufWritePre *.go LspDocumentFormatSync
  endif
  if executable('solargraph')
    " gem install solargraph
    au User lsp_setup call lsp#register_server({
      \ 'name': 'solargraph',
      \ 'cmd': {server_info->[&shell, &shellcmdflag, 'solargraph stdio']},
      \ 'initialization_options': {"diagnostics": "true"},
      \ 'whitelist': ['ruby'],
      \ })
  endif
  if executable('rls')
    au User lsp_setup call lsp#register_server({
      \ 'name': 'rls',
      \ 'cmd': {server_info->['rustup', 'run', 'stable', 'rls']},
      \ 'workspace_config': {'rust': {'clippy_preference': 'on'}},
      \ 'whitelist': ['rust'],
      \ })
  endif
'''

[[plugins]]
repo = 'rcmdnk/vim-markdown'
hook_add = '''
  let g:vim_markdown_folding_disabled = 1
'''

[[plugins]]
repo = 'rust-lang/rust.vim'

[[plugins]]
repo = 'Shougo/dein.vim'

[[plugins]]
repo = 'Shougo/neomru.vim'

[[plugins]]
repo = 'Shougo/neosnippet-snippets'

[[plugins]]
repo = 'slim-template/vim-slim'

[[plugins]]
repo = 'tmux-plugins/vim-tmux'

[[plugins]]
repo = 'tpope/vim-endwise'

[[plugins]]
repo = 'tpope/vim-fugitive'

[[plugins]]
repo = 'tpope/vim-haml'

[[plugins]]
repo = 'tpope/vim-rails'

[[plugins]]
repo = 'tpope/vim-repeat'

[[plugins]]
repo = 'tpope/vim-rhubarb'
hook_add = '''
  nmap <silent> gb :Gbrowse<CR>
  vmap <silent> gb :Gbrowse<CR>
'''

[[plugins]]
repo = 'tpope/vim-surround'
