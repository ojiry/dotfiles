[[plugins]]
repo = 'Shougo/denite.nvim'
on_cmd = 'Denite'
hook_add = '''
  nnoremap [denite] <Nop>
  nmap <Space>d [denite]
  nmap <silent> [denite]b :<C-u>Denite buffer<CR>
  nmap <silent> [denite]d :<C-u>call denite#start([{'name': 'file_rec', 'args': ['$HOME/ghq/github.com/ojiry/dotfiles']}])<CR>
  nmap <silent> [denite]e :<C-u>Denite filetype<CR>
  nmap <silent> [denite]f :<C-u>Denite file_rec<CR>
  nmap <silent> [denite]g :<C-u>Denite grep<CR>
  nmap <silent> [denite]l :<C-u>Denite line<CR>
  nmap <silent> [denite]m :<C-u>Denite file_mru<CR>
  nmap <silent> [denite]n :<C-u>Denite -resume -immediately -select=-1<CR>
  nmap <silent> [denite]p :<C-u>Denite -resume -immediately -select=+1<CR>
  nmap <silent> [denite]q :<C-u>Denite help<CR>
  nmap <silent> [denite]r :<C-u>Denite -resume<CR>
  nmap <silent> [denite]w :<C-u>DeniteCursorWord grep<CR>
  nmap <silent> [denite]y :<C-u>Denite neoyank<CR>
'''
hook_post_source = '''
  call denite#custom#map('insert', '<C-n>',
    \ '<denite:move_to_next_line>')
  call denite#custom#map('insert', '<C-p>',
    \ '<denite:move_to_previous_line>')
  call denite#custom#map('_', '<C-s>',
    \ '<denite:do_action:split>')
  call denite#custom#map('insert', '<C-s>',
    \ '<denite:do_action:split>')
  call denite#custom#map('_', '<C-v>',
    \ '<denite:do_action:vsplit>')
  call denite#custom#map('insert', '<C-v>',
    \ '<denite:do_action:vsplit>')

  call denite#custom#var('file_rec', 'command',
    \ ['rg', '--files', '--glob', '!.git'])
  call denite#custom#var('grep', 'command', ['rg'])
  call denite#custom#var('grep', 'recursive_opts', [])
  call denite#custom#var('grep', 'final_opts', [])
  call denite#custom#var('grep', 'separator', ['--'])
  call denite#custom#var('grep', 'default_opts',
    \ ['--vimgrep', '--no-heading'])
'''

[[plugins]]
repo = 'Shougo/deoplete.nvim'
on_i = 1
hook_add = '''
  let g:deoplete#enable_at_startup = 1
'''

[[plugins]]
repo = 'Shougo/neoyank.vim'
on_if = 1
on_event = 'TextYankPost'
on_source = ['denite.nvim']

[[plugins]]
repo = 'Shougo/neosnippet.vim'
hook_source = '''
  imap <C-k> <Plug>(neosnippet_expand_or_jump)
  smap <C-k> <Plug>(neosnippet_expand_or_jump)
  xmap <C-k> <Plug>(neosnippet_expand_target)

  if has('conceal')
    set conceallevel=2 concealcursor=niv
  endif
'''
on_i = 1
on_ft = ['snippet']
depends = ['neosnippet-snippets']

[[plugins]]
repo = 'zchee/deoplete-go'
on_i = 1
on_ft = 'go'
